# datasource PostgreSQl
spring.sql.init.platform=postgres
spring.datasource.url=jdbc:postgresql://localhost:5433/SusanneEindopdrachtVA
spring.datasource.username=postgres
spring.datasource.password=postgres
spring.datasource.driver-class-name=org.postgresql.Driver
server.port=8081

# jpa
spring.jpa.database=postgresql
spring.jpa.show-sql=true

# generate schema ddl to create tables
spring.jpa.generate-ddl=true
spring.jpa.hibernate.ddl-auto=create-drop
#Voor het testen is het soms makkelijk om hier "create-drop" te gebruiken. \
##  Je krijgt dan wel wat warschuwingen bij het opstarten, maar die mag je negeren.\
##  \ Het grote voordeel van create-drop is dat je database elke herstart precies zo is zoals je in de data.sql beschrijft. \
##  Voor het inleveren van je eindopdracht zien we hier graag "update" staan, dat is wat je voor een (echte) productie omgeving ook zou gebruiken.


# database initialization with data.sql after hibernate
spring.sql.init.mode=always
spring.jpa.defer-datasource-initialization=true

# hibernate
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true
#
#


my.upload_location=/Users/susannehagen/Documenten
spring.datasource.auto-commit=false

spring.servlet.multipart.enabled=true
spring.servlet.multipart.file-size-threshold=2KB
spring.servlet.multipart.max-file-size=100MB
spring.servlet.multipart.max-request-size=100MB
